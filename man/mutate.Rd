% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate.R
\name{mutate}
\alias{mutate}
\title{MUTATion high-level function}
\usage{
mutate(MUT_F=c("mut","mutbga"),OldChrom,FieldDR=NULL,MutOpt=NULL,SUBPOP=1,...)
}
\arguments{
\item{MUT_F}{character string containing the name of the mutation function.}

\item{OldChrom}{matrix containing the chromosomes of the old
population. Each line corresponds to one individual.}

\item{FieldDR}{matrix describing the boundaries of each variable 
(real-values) or defining the base of the variables of 
each individual (discrete values). Optional for (binary) discrete values}

\item{MutOpt}{vector containing mutation rate and shrink value.
MutOpt[1] is the number containing the mutation rate -
probability for mutation of a variable.
MutOpt[2] is the number for shrinking the
mutation range in the range [0, 1], possibility to
shrink the range of the mutation depending on,
for instance actual generation.}

\item{SUBPOP}{an optional number of subpopulations.
Default is set to 1.}

\item{...}{ohter aurguments passed on to mutation function.}
}
\value{
a matrix containing the chromosomes of the population
after mutation in the same format as OldChrom.
}
\description{
This function takes a matrix OldChrom containing the 
representation of the individuals in the current population,
mutates the individuals and returns the resulting population.

The function handles multiple populations and calls the low-level
mutation function for the actual mutation process.
}
\examples{

Chrom = crtbp(40,10)$Chrom

NewChrom = mutate(MUT_F="mut",OldChrom=Chrom)
}
\author{
The original matlab implementation of mutate was written by Hartmut Pohlheim.
The R implementation was written by David Zhao.
}

