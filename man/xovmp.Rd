% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xovmp.R
\name{xovmp}
\alias{xovdp}
\alias{xovdprs}
\alias{xovmp}
\alias{xovsh}
\alias{xovshrs}
\alias{xovsp}
\alias{xovsprs}
\title{Crossover operators for binary representation}
\usage{
xovmp(OldChrom, Px = 0.7, Npt = 0, Rs = FALSE)

xovsp(OldChrom, Px = 0.7)

xovdp(OldChrom, Px = 0.7)

xovsh(OldChrom, Px = 0.7)

xovsprs(OldChrom, Px = 0.7)

xovdprs(OldChrom, Px = 0.7)

xovshrs(OldChrom, Px = 0.7)
}
\arguments{
\item{OldChrom}{a matrix containing the chromosomes of the old
population. Each row corresponds to one individual.}

\item{Px}{a number indicating the probability of recombination 
ocurring between pairs of individuals. If omitted, 0.7 is set.}

\item{Npt}{an optinal number indicating the number of crossover points to use.
Specifically, 1 indicates single point recombination; 2 indicates 
double point recombination; and 0 indicates shuffle point recombination.
Default is set to 0.}

\item{Rs}{an optional logical value indicating whether or not to 
force the production of offspring different from their parents.
Default is set to TRUE.}
}
\value{
a matrix containing the offspring after mating, 
ready to be mutated and/or evaluated, in the same 
format as OldChrom.
}
\description{
Taking a matrix OldChrom containing the binary
representation of the individuals in the current population,
applying crossover to consecutive pairs of individuals with
defined probability and returns the resulting population.
}
\details{
\code{xovmp} is the general crossover function for binary representation and 
can be called by all other crossover functions. When \code{xovmp} called by 
\code{\link{recombin}}, high-level crossover function, its arguments can aslo
be passed on to. With different combination of argumetents, it can be used identically
to \code{xovsp}, \code{xovdp}, \code{xovsh}, \code{xovsprs}, \code{xovdprs} and 
\code{xovshrs}. Althogh these replicatical use, other form of crossover funcions
are maintained for completence reason.
\cr\cr
\code{xovsp} performs single-point crossover between pairs of individuals. When called by
\code{\link{recombin}}, \code{recombin("xovsp",Chrom)} is identical to 
\code{recombin("xovmp",Chrom,Npt=1)}.
\cr\cr
\code{xovdp} performs double-point crossover between pairs of individuals. When called by
\code{\link{recombin}}, \code{recombin("xovdp",Chrom)} is identical to 
\code{recombin("xovmp",Chrom,Npt=2)}.
\cr\cr
\code{xovsh} performs shuffle-point crossover between pairs of individuals. When called by
\code{\link{recombin}}, \code{recombin("xovsh",Chrom)} is identical to 
\code{recombin("xovmp",Chrom)}.
\cr\cr
\code{xovsprs} performs single-point reduced surrogate crossover between 
pairs of individuals. When called by \code{\link{recombin}}, 
\code{recombin("xovsprs",Chrom)} is identical to 
\code{recombin("xovmp",Chrom,Npt=1,Rs=TRUE)}.
\cr\cr
\code{xovdprs} performs double-point reduced surrogate crossover between 
pairs of individuals. When called by \code{\link{recombin}}, 
\code{recombin("xovdprs",Chrom)} is identical to 
\code{recombin("xovmp",Chrom,Npt=2,Rs=TRUE)}.
\cr\cr
\code{xovshrs} performs shuffle-point reduced surrogate crossover between 
pairs of individuals. When called by \code{\link{recombin}}, 
\code{recombin("xovshrs",Chrom)} is identical to 
\code{recombin("xovmp",Chrom,Rs=TRUE)}.
}
\examples{

Chrom = crtbp(40,10)$Chrom

Selch = xovmp(OldChrom=Chrom)
}
\author{
The original matlab implementation was written by Carlos Fonseca and
updated by Andrew Chipperfield.
The R implementation was written by David Zhao.
}
\seealso{
\code{\link{recombin}}
}

